#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CD_Management.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CD_Management")]
	public partial class CDDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertQuanLyKho(QuanLyKho instance);
    partial void UpdateQuanLyKho(QuanLyKho instance);
    partial void DeleteQuanLyKho(QuanLyKho instance);
    partial void InsertBang(Bang instance);
    partial void UpdateBang(Bang instance);
    partial void DeleteBang(Bang instance);
    partial void InsertKhach(Khach instance);
    partial void UpdateKhach(Khach instance);
    partial void DeleteKhach(Khach instance);
    partial void InsertNhaCungCap(NhaCungCap instance);
    partial void UpdateNhaCungCap(NhaCungCap instance);
    partial void DeleteNhaCungCap(NhaCungCap instance);
    partial void InsertPhieuMuon(PhieuMuon instance);
    partial void UpdatePhieuMuon(PhieuMuon instance);
    partial void DeletePhieuMuon(PhieuMuon instance);
    partial void InsertPhieuTra(PhieuTra instance);
    partial void UpdatePhieuTra(PhieuTra instance);
    partial void DeletePhieuTra(PhieuTra instance);
    #endregion
		
		public CDDataContext() : 
				base(global::CD_Management.Properties.Settings.Default.CD_ManagementConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CDDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CDDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CDDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CDDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<QuanLyKho> QuanLyKhos
		{
			get
			{
				return this.GetTable<QuanLyKho>();
			}
		}
		
		public System.Data.Linq.Table<Bang> Bangs
		{
			get
			{
				return this.GetTable<Bang>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietPhieuMuon> ChiTietPhieuMuons
		{
			get
			{
				return this.GetTable<ChiTietPhieuMuon>();
			}
		}
		
		public System.Data.Linq.Table<Khach> Khaches
		{
			get
			{
				return this.GetTable<Khach>();
			}
		}
		
		public System.Data.Linq.Table<NhaCungCap> NhaCungCaps
		{
			get
			{
				return this.GetTable<NhaCungCap>();
			}
		}
		
		public System.Data.Linq.Table<PhieuMuon> PhieuMuons
		{
			get
			{
				return this.GetTable<PhieuMuon>();
			}
		}
		
		public System.Data.Linq.Table<PhieuTra> PhieuTras
		{
			get
			{
				return this.GetTable<PhieuTra>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private string _Password;
		
		private string _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    #endregion
		
		public Account()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuanLyKho")]
	public partial class QuanLyKho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKho;
		
		private string _MaBang;
		
		private string _LoaiGiaoDich;
		
		private int _SoLuong;
		
		private System.DateTime _NgayGiaoDich;
		
		private string _NhaCungCapId;
		
		private string _GhiChu;
		
		private EntityRef<Bang> _Bang;
		
		private EntityRef<NhaCungCap> _NhaCungCap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhoChanging(string value);
    partial void OnMaKhoChanged();
    partial void OnMaBangChanging(string value);
    partial void OnMaBangChanged();
    partial void OnLoaiGiaoDichChanging(string value);
    partial void OnLoaiGiaoDichChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnNgayGiaoDichChanging(System.DateTime value);
    partial void OnNgayGiaoDichChanged();
    partial void OnNhaCungCapIdChanging(string value);
    partial void OnNhaCungCapIdChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public QuanLyKho()
		{
			this._Bang = default(EntityRef<Bang>);
			this._NhaCungCap = default(EntityRef<NhaCungCap>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKho", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKho
		{
			get
			{
				return this._MaKho;
			}
			set
			{
				if ((this._MaKho != value))
				{
					this.OnMaKhoChanging(value);
					this.SendPropertyChanging();
					this._MaKho = value;
					this.SendPropertyChanged("MaKho");
					this.OnMaKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBang", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MaBang
		{
			get
			{
				return this._MaBang;
			}
			set
			{
				if ((this._MaBang != value))
				{
					if (this._Bang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaBangChanging(value);
					this.SendPropertyChanging();
					this._MaBang = value;
					this.SendPropertyChanged("MaBang");
					this.OnMaBangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiGiaoDich", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LoaiGiaoDich
		{
			get
			{
				return this._LoaiGiaoDich;
			}
			set
			{
				if ((this._LoaiGiaoDich != value))
				{
					this.OnLoaiGiaoDichChanging(value);
					this.SendPropertyChanging();
					this._LoaiGiaoDich = value;
					this.SendPropertyChanged("LoaiGiaoDich");
					this.OnLoaiGiaoDichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGiaoDich", DbType="DateTime NOT NULL")]
		public System.DateTime NgayGiaoDich
		{
			get
			{
				return this._NgayGiaoDich;
			}
			set
			{
				if ((this._NgayGiaoDich != value))
				{
					this.OnNgayGiaoDichChanging(value);
					this.SendPropertyChanging();
					this._NgayGiaoDich = value;
					this.SendPropertyChanged("NgayGiaoDich");
					this.OnNgayGiaoDichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhaCungCapId", DbType="NVarChar(50)")]
		public string NhaCungCapId
		{
			get
			{
				return this._NhaCungCapId;
			}
			set
			{
				if ((this._NhaCungCapId != value))
				{
					if (this._NhaCungCap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNhaCungCapIdChanging(value);
					this.SendPropertyChanging();
					this._NhaCungCapId = value;
					this.SendPropertyChanged("NhaCungCapId");
					this.OnNhaCungCapIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(255)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bang_QuanLyKho", Storage="_Bang", ThisKey="MaBang", OtherKey="MaBang", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Bang Bang
		{
			get
			{
				return this._Bang.Entity;
			}
			set
			{
				Bang previousValue = this._Bang.Entity;
				if (((previousValue != value) 
							|| (this._Bang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bang.Entity = null;
						previousValue.QuanLyKhos.Remove(this);
					}
					this._Bang.Entity = value;
					if ((value != null))
					{
						value.QuanLyKhos.Add(this);
						this._MaBang = value.MaBang;
					}
					else
					{
						this._MaBang = default(string);
					}
					this.SendPropertyChanged("Bang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_QuanLyKho", Storage="_NhaCungCap", ThisKey="NhaCungCapId", OtherKey="MaNhaCungCap", IsForeignKey=true, DeleteRule="SET NULL")]
		public NhaCungCap NhaCungCap
		{
			get
			{
				return this._NhaCungCap.Entity;
			}
			set
			{
				NhaCungCap previousValue = this._NhaCungCap.Entity;
				if (((previousValue != value) 
							|| (this._NhaCungCap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaCungCap.Entity = null;
						previousValue.QuanLyKhos.Remove(this);
					}
					this._NhaCungCap.Entity = value;
					if ((value != null))
					{
						value.QuanLyKhos.Add(this);
						this._NhaCungCapId = value.MaNhaCungCap;
					}
					else
					{
						this._NhaCungCapId = default(string);
					}
					this.SendPropertyChanged("NhaCungCap");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bang")]
	public partial class Bang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaBang;
		
		private string _TenBang;
		
		private int _SoLuong;
		
		private double _DonGiaBan;
		
		private string _TheLoai;
		
		private string _TacGia;
		
		private EntitySet<QuanLyKho> _QuanLyKhos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBangChanging(string value);
    partial void OnMaBangChanged();
    partial void OnTenBangChanging(string value);
    partial void OnTenBangChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaBanChanging(double value);
    partial void OnDonGiaBanChanged();
    partial void OnTheLoaiChanging(string value);
    partial void OnTheLoaiChanged();
    partial void OnTacGiaChanging(string value);
    partial void OnTacGiaChanged();
    #endregion
		
		public Bang()
		{
			this._QuanLyKhos = new EntitySet<QuanLyKho>(new Action<QuanLyKho>(this.attach_QuanLyKhos), new Action<QuanLyKho>(this.detach_QuanLyKhos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBang", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaBang
		{
			get
			{
				return this._MaBang;
			}
			set
			{
				if ((this._MaBang != value))
				{
					this.OnMaBangChanging(value);
					this.SendPropertyChanging();
					this._MaBang = value;
					this.SendPropertyChanged("MaBang");
					this.OnMaBangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenBang", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenBang
		{
			get
			{
				return this._TenBang;
			}
			set
			{
				if ((this._TenBang != value))
				{
					this.OnTenBangChanging(value);
					this.SendPropertyChanging();
					this._TenBang = value;
					this.SendPropertyChanged("TenBang");
					this.OnTenBangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGiaBan", DbType="Float NOT NULL")]
		public double DonGiaBan
		{
			get
			{
				return this._DonGiaBan;
			}
			set
			{
				if ((this._DonGiaBan != value))
				{
					this.OnDonGiaBanChanging(value);
					this.SendPropertyChanging();
					this._DonGiaBan = value;
					this.SendPropertyChanged("DonGiaBan");
					this.OnDonGiaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheLoai", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TheLoai
		{
			get
			{
				return this._TheLoai;
			}
			set
			{
				if ((this._TheLoai != value))
				{
					this.OnTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._TheLoai = value;
					this.SendPropertyChanged("TheLoai");
					this.OnTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TacGia", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TacGia
		{
			get
			{
				return this._TacGia;
			}
			set
			{
				if ((this._TacGia != value))
				{
					this.OnTacGiaChanging(value);
					this.SendPropertyChanging();
					this._TacGia = value;
					this.SendPropertyChanged("TacGia");
					this.OnTacGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bang_QuanLyKho", Storage="_QuanLyKhos", ThisKey="MaBang", OtherKey="MaBang")]
		public EntitySet<QuanLyKho> QuanLyKhos
		{
			get
			{
				return this._QuanLyKhos;
			}
			set
			{
				this._QuanLyKhos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuanLyKhos(QuanLyKho entity)
		{
			this.SendPropertyChanging();
			entity.Bang = this;
		}
		
		private void detach_QuanLyKhos(QuanLyKho entity)
		{
			this.SendPropertyChanging();
			entity.Bang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietPhieuMuon")]
	public partial class ChiTietPhieuMuon
	{
		
		private string _MaHDBan;
		
		private string _MaBang;
		
		private int _SoLuong;
		
		private double _DonGia;
		
		private double _Coc;
		
		private double _TienCoc;
		
		public ChiTietPhieuMuon()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHDBan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MaHDBan
		{
			get
			{
				return this._MaHDBan;
			}
			set
			{
				if ((this._MaHDBan != value))
				{
					this._MaHDBan = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBang", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MaBang
		{
			get
			{
				return this._MaBang;
			}
			set
			{
				if ((this._MaBang != value))
				{
					this._MaBang = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this._SoLuong = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Float NOT NULL")]
		public double DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this._DonGia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Coc", DbType="Float NOT NULL")]
		public double Coc
		{
			get
			{
				return this._Coc;
			}
			set
			{
				if ((this._Coc != value))
				{
					this._Coc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TienCoc", DbType="Float NOT NULL")]
		public double TienCoc
		{
			get
			{
				return this._TienCoc;
			}
			set
			{
				if ((this._TienCoc != value))
				{
					this._TienCoc = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Khach")]
	public partial class Khach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKhach;
		
		private string _TenKhach;
		
		private string _DienThoai;
		
		private string _DiaChi;
		
		private EntitySet<PhieuMuon> _PhieuMuons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhachChanging(string value);
    partial void OnMaKhachChanged();
    partial void OnTenKhachChanging(string value);
    partial void OnTenKhachChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    #endregion
		
		public Khach()
		{
			this._PhieuMuons = new EntitySet<PhieuMuon>(new Action<PhieuMuon>(this.attach_PhieuMuons), new Action<PhieuMuon>(this.detach_PhieuMuons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhach", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKhach
		{
			get
			{
				return this._MaKhach;
			}
			set
			{
				if ((this._MaKhach != value))
				{
					this.OnMaKhachChanging(value);
					this.SendPropertyChanging();
					this._MaKhach = value;
					this.SendPropertyChanged("MaKhach");
					this.OnMaKhachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhach", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenKhach
		{
			get
			{
				return this._TenKhach;
			}
			set
			{
				if ((this._TenKhach != value))
				{
					this.OnTenKhachChanging(value);
					this.SendPropertyChanging();
					this._TenKhach = value;
					this.SendPropertyChanged("TenKhach");
					this.OnTenKhachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khach_PhieuMuon", Storage="_PhieuMuons", ThisKey="MaKhach", OtherKey="MaKhach")]
		public EntitySet<PhieuMuon> PhieuMuons
		{
			get
			{
				return this._PhieuMuons;
			}
			set
			{
				this._PhieuMuons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhieuMuons(PhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.Khach = this;
		}
		
		private void detach_PhieuMuons(PhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.Khach = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhaCungCap")]
	public partial class NhaCungCap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNhaCungCap;
		
		private string _TenNhaCungCap;
		
		private string _SoDienThoai;
		
		private string _DiaChi;
		
		private string _Email;
		
		private EntitySet<QuanLyKho> _QuanLyKhos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhaCungCapChanging(string value);
    partial void OnMaNhaCungCapChanged();
    partial void OnTenNhaCungCapChanging(string value);
    partial void OnTenNhaCungCapChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public NhaCungCap()
		{
			this._QuanLyKhos = new EntitySet<QuanLyKho>(new Action<QuanLyKho>(this.attach_QuanLyKhos), new Action<QuanLyKho>(this.detach_QuanLyKhos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhaCungCap", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNhaCungCap
		{
			get
			{
				return this._MaNhaCungCap;
			}
			set
			{
				if ((this._MaNhaCungCap != value))
				{
					this.OnMaNhaCungCapChanging(value);
					this.SendPropertyChanging();
					this._MaNhaCungCap = value;
					this.SendPropertyChanged("MaNhaCungCap");
					this.OnMaNhaCungCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhaCungCap", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TenNhaCungCap
		{
			get
			{
				return this._TenNhaCungCap;
			}
			set
			{
				if ((this._TenNhaCungCap != value))
				{
					this.OnTenNhaCungCapChanging(value);
					this.SendPropertyChanging();
					this._TenNhaCungCap = value;
					this.SendPropertyChanged("TenNhaCungCap");
					this.OnTenNhaCungCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(50)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(255)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_QuanLyKho", Storage="_QuanLyKhos", ThisKey="MaNhaCungCap", OtherKey="NhaCungCapId")]
		public EntitySet<QuanLyKho> QuanLyKhos
		{
			get
			{
				return this._QuanLyKhos;
			}
			set
			{
				this._QuanLyKhos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuanLyKhos(QuanLyKho entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = this;
		}
		
		private void detach_QuanLyKhos(QuanLyKho entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuMuon")]
	public partial class PhieuMuon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHDMuon;
		
		private System.DateTime _NgayMuon;
		
		private System.DateTime _NgayTra;
		
		private string _MaKhach;
		
		private double _TienCoc;
		
		private double _TienTra;
		
		private bool _HoatDong;
		
		private EntitySet<PhieuTra> _PhieuTras;
		
		private EntityRef<Khach> _Khach;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDMuonChanging(string value);
    partial void OnMaHDMuonChanged();
    partial void OnNgayMuonChanging(System.DateTime value);
    partial void OnNgayMuonChanged();
    partial void OnNgayTraChanging(System.DateTime value);
    partial void OnNgayTraChanged();
    partial void OnMaKhachChanging(string value);
    partial void OnMaKhachChanged();
    partial void OnTienCocChanging(double value);
    partial void OnTienCocChanged();
    partial void OnTienTraChanging(double value);
    partial void OnTienTraChanged();
    partial void OnHoatDongChanging(bool value);
    partial void OnHoatDongChanged();
    #endregion
		
		public PhieuMuon()
		{
			this._PhieuTras = new EntitySet<PhieuTra>(new Action<PhieuTra>(this.attach_PhieuTras), new Action<PhieuTra>(this.detach_PhieuTras));
			this._Khach = default(EntityRef<Khach>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHDMuon", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHDMuon
		{
			get
			{
				return this._MaHDMuon;
			}
			set
			{
				if ((this._MaHDMuon != value))
				{
					this.OnMaHDMuonChanging(value);
					this.SendPropertyChanging();
					this._MaHDMuon = value;
					this.SendPropertyChanged("MaHDMuon");
					this.OnMaHDMuonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayMuon", DbType="DateTime NOT NULL")]
		public System.DateTime NgayMuon
		{
			get
			{
				return this._NgayMuon;
			}
			set
			{
				if ((this._NgayMuon != value))
				{
					this.OnNgayMuonChanging(value);
					this.SendPropertyChanging();
					this._NgayMuon = value;
					this.SendPropertyChanged("NgayMuon");
					this.OnNgayMuonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTra", DbType="DateTime NOT NULL")]
		public System.DateTime NgayTra
		{
			get
			{
				return this._NgayTra;
			}
			set
			{
				if ((this._NgayTra != value))
				{
					this.OnNgayTraChanging(value);
					this.SendPropertyChanging();
					this._NgayTra = value;
					this.SendPropertyChanged("NgayTra");
					this.OnNgayTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhach", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MaKhach
		{
			get
			{
				return this._MaKhach;
			}
			set
			{
				if ((this._MaKhach != value))
				{
					if (this._Khach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhachChanging(value);
					this.SendPropertyChanging();
					this._MaKhach = value;
					this.SendPropertyChanged("MaKhach");
					this.OnMaKhachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TienCoc", DbType="Float NOT NULL")]
		public double TienCoc
		{
			get
			{
				return this._TienCoc;
			}
			set
			{
				if ((this._TienCoc != value))
				{
					this.OnTienCocChanging(value);
					this.SendPropertyChanging();
					this._TienCoc = value;
					this.SendPropertyChanged("TienCoc");
					this.OnTienCocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TienTra", DbType="Float NOT NULL")]
		public double TienTra
		{
			get
			{
				return this._TienTra;
			}
			set
			{
				if ((this._TienTra != value))
				{
					this.OnTienTraChanging(value);
					this.SendPropertyChanging();
					this._TienTra = value;
					this.SendPropertyChanged("TienTra");
					this.OnTienTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoatDong", DbType="Bit NOT NULL")]
		public bool HoatDong
		{
			get
			{
				return this._HoatDong;
			}
			set
			{
				if ((this._HoatDong != value))
				{
					this.OnHoatDongChanging(value);
					this.SendPropertyChanging();
					this._HoatDong = value;
					this.SendPropertyChanged("HoatDong");
					this.OnHoatDongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuMuon_PhieuTra", Storage="_PhieuTras", ThisKey="MaHDMuon", OtherKey="MaHDMuon")]
		public EntitySet<PhieuTra> PhieuTras
		{
			get
			{
				return this._PhieuTras;
			}
			set
			{
				this._PhieuTras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khach_PhieuMuon", Storage="_Khach", ThisKey="MaKhach", OtherKey="MaKhach", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Khach Khach
		{
			get
			{
				return this._Khach.Entity;
			}
			set
			{
				Khach previousValue = this._Khach.Entity;
				if (((previousValue != value) 
							|| (this._Khach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khach.Entity = null;
						previousValue.PhieuMuons.Remove(this);
					}
					this._Khach.Entity = value;
					if ((value != null))
					{
						value.PhieuMuons.Add(this);
						this._MaKhach = value.MaKhach;
					}
					else
					{
						this._MaKhach = default(string);
					}
					this.SendPropertyChanged("Khach");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhieuTras(PhieuTra entity)
		{
			this.SendPropertyChanging();
			entity.PhieuMuon = this;
		}
		
		private void detach_PhieuTras(PhieuTra entity)
		{
			this.SendPropertyChanging();
			entity.PhieuMuon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuTra")]
	public partial class PhieuTra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHDTra;
		
		private string _MaHDMuon;
		
		private System.Nullable<System.DateTime> _NgayTraHang;
		
		private string _GhiChu;
		
		private double _TongTien;
		
		private System.Nullable<double> _SoTienPhat;
		
		private EntityRef<PhieuMuon> _PhieuMuon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDTraChanging(string value);
    partial void OnMaHDTraChanged();
    partial void OnMaHDMuonChanging(string value);
    partial void OnMaHDMuonChanged();
    partial void OnNgayTraHangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTraHangChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnTongTienChanging(double value);
    partial void OnTongTienChanged();
    partial void OnSoTienPhatChanging(System.Nullable<double> value);
    partial void OnSoTienPhatChanged();
    #endregion
		
		public PhieuTra()
		{
			this._PhieuMuon = default(EntityRef<PhieuMuon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHDTra", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHDTra
		{
			get
			{
				return this._MaHDTra;
			}
			set
			{
				if ((this._MaHDTra != value))
				{
					this.OnMaHDTraChanging(value);
					this.SendPropertyChanging();
					this._MaHDTra = value;
					this.SendPropertyChanged("MaHDTra");
					this.OnMaHDTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHDMuon", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MaHDMuon
		{
			get
			{
				return this._MaHDMuon;
			}
			set
			{
				if ((this._MaHDMuon != value))
				{
					if (this._PhieuMuon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHDMuonChanging(value);
					this.SendPropertyChanging();
					this._MaHDMuon = value;
					this.SendPropertyChanged("MaHDMuon");
					this.OnMaHDMuonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTraHang", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTraHang
		{
			get
			{
				return this._NgayTraHang;
			}
			set
			{
				if ((this._NgayTraHang != value))
				{
					this.OnNgayTraHangChanging(value);
					this.SendPropertyChanging();
					this._NgayTraHang = value;
					this.SendPropertyChanged("NgayTraHang");
					this.OnNgayTraHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(50)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Float NOT NULL")]
		public double TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTienPhat", DbType="Float")]
		public System.Nullable<double> SoTienPhat
		{
			get
			{
				return this._SoTienPhat;
			}
			set
			{
				if ((this._SoTienPhat != value))
				{
					this.OnSoTienPhatChanging(value);
					this.SendPropertyChanging();
					this._SoTienPhat = value;
					this.SendPropertyChanged("SoTienPhat");
					this.OnSoTienPhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuMuon_PhieuTra", Storage="_PhieuMuon", ThisKey="MaHDMuon", OtherKey="MaHDMuon", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PhieuMuon PhieuMuon
		{
			get
			{
				return this._PhieuMuon.Entity;
			}
			set
			{
				PhieuMuon previousValue = this._PhieuMuon.Entity;
				if (((previousValue != value) 
							|| (this._PhieuMuon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuMuon.Entity = null;
						previousValue.PhieuTras.Remove(this);
					}
					this._PhieuMuon.Entity = value;
					if ((value != null))
					{
						value.PhieuTras.Add(this);
						this._MaHDMuon = value.MaHDMuon;
					}
					else
					{
						this._MaHDMuon = default(string);
					}
					this.SendPropertyChanged("PhieuMuon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
